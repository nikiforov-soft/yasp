version: 1
sensors:
  - enabled: false
    name: Xiaomi Mi Temperature and Humidity Monitor 2
    input:
      transforms:
        - name: ble-to-mqtt
          properties:
            serviceDataKey: "0000fe95-0000-1000-8000-00805f9b34fb"
      mqtt:
        enabled: true
        topics:
          - ble_events/ServiceDataAdvertisement/LYWSD03MMC/#
        brokerUrls:
          - tcp://localhost:1883
        username: ""
        password: ""
        clientId: LYWSD03MMC_Subscriber
        keepAlive: 5
        connectRetryDelay: 5s
      memphis:
        enabled: false
        hostname: 127.0.0.1:6666
        username: bletomemphisconsumer
        password: yourpassword
        station: bletomemphis
        consumerName: bletomemphisconsumer
        pollInterval: 1s
        batchSize: 100
        headerPrefixes:
          path: ble-to-memphis/ServiceDataAdvertisement/*/LYWSD03MMC
    outputs:
      - mqtt:
          enabled: true
          topic: sensors/LYWSD03MMC/{{index .Properties "deviceName" }}/{{index .Properties "unit" | ToLower }}
          brokerUrls:
            - tcp://localhost:1883
          username: ""
          password: ""
          clientId: LYWSD03MMC_Publisher
          keepAlive: 5
          connectRetryDelay: 5s
          qos: 0
          retain: false
      - influxdb2:
          enabled: false
          url: "http://localhost:8086/"
          authToken: ""
          organizationId: ""
          bucket: sensors
          measurement: "{{ index .Properties \"unit\" }}"
          useGZip: true
          batchSize: 0
          tagMapping:
            name: "{{ index .Properties \"deviceName\" }}"
            type: "{{ index .Properties \"deviceType\" }}"
            macAddress: "{{ index .Properties \"deviceMacAddress\" }}"
            unit: "{{ index .Properties \"unit\" }}"
          fieldMapping:
            unit: "{{ index .Properties \"unit\" }}"
            value: "{{ index .Properties \"value\" | ToNumber }}"
      - prometheus:
          enabled: false
          listenAddr: ":6123"
          endpoint: "/metrics"
          tls:
            certificateFile: ""
            privateKeyFile: ""
          # Go template live previewer https://gotemplate.io/
          metricsMapping:
            - name: "{{ index .Properties \"unit\" }}" # Templating supported
              description: "sensor value." # Templating supported
              namespace: "{{ index .Properties \"deviceType\" }}" # Templating supported
              subsystem: "" # Templating supported
              labels:
                device: "{{ index .Properties \"deviceName\" }}" # Templating supported on both keys and values
              type: Gauge # Templating supported
              value: "{{ index .Properties \"value\" | ToNumber }}" # Templating supported
              condition: ""  # Templating supported
    # Individual mapping per unit example
    #            - name: Temperature
    #              description: Temperature sensor value.
    #              namespace: ""
    #              subsystem: ""
    #              labels:
    #                device: "{{ index .Properties \"deviceName\" }}"
    #                deviceType: "{{ index .Properties \"deviceType\" }}"
    #              type: Gauge
    #              value: "{{ index .Properties \"value\" | ToNumber }}"
    #              condition: "{{ if eq (index .Properties \"unit\") \"Temperature\" }}true{{else}}false{{end}}"
    #            - name: Humidity
    #              description: Humidity sensor value.
    #              namespace: ""
    #              subsystem: ""
    #              labels:
    #                device: "{{ index .Properties \"deviceName\" }}"
    #                deviceType: "{{ index .Properties \"deviceType\" }}"
    #              type: Gauge
    #              value: "{{ index .Properties \"value\" | ToNumber }}"
    #              condition: "{{ if eq (index .Properties \"unit\") \"Humidity\" }}true{{else}}false{{end}}"
    #            - name: Battery
    #              description: Battery sensor value.
    #              namespace: ""
    #              subsystem: ""
    #              labels:
    #                device: "{{ index .Properties \"deviceName\" }}"
    #                deviceType: "{{ index .Properties \"deviceType\" }}"
    #              type: Gauge
    #              value: "{{ index .Properties \"value\" | ToNumber }}"
    #              condition: "{{ if eq (index .Properties \"unit\") \"Battery\" }}true{{else}}false{{end}}"
    devices:
      - name: Your Sensor
        type: LYWSD03MMC
        properties:
          macAddress: "A4:C1:38:AB:CD:EF"
          encryptionKey: "0abcdef0000000000000000000000000"
  - enabled: false
    name: P1P2 HVAC
    input:
      mqtt:
        enabled: true
        topics:
          - "P1P2/P/<last digit of the ip>/T/8/IULiquidPipeTemperature"
          - "P1P2/P/<last digit of the ip>/T/8/IUAirInletTemperature"
          - "P1P2/P/<last digit of the ip>/T/8/IUAirOutletTemperature"
        brokerUrls:
          - tcp://localhost:1883
        clientId: P1P2_Subscriber
        keepAlive: 5
        connectRetryDelay: 5s
    outputs:
      - influxdb2:
          enabled: true
          url: "http://localhost:8086/"
          authToken: "your auth token"
          organizationId: "your organization id"
          bucket: sensors
          measurement: "{{ index .Properties \"unit\" }}"
          useGZip: true
          batchSize: 0
          tagMapping:
            type: "{{ index .Properties \"type\" }}"
            unit: "{{ index .Properties \"unit\" }}"
            description: "{{ index .Properties \"description\" }}"
          fieldMapping:
            unit: "{{ index .Properties \"unit\" }}"
            value: "{{ index .Properties \"value\" | ToNumber }}"
    devices:
      - name: Your Device
        type: p1p2
        properties:
          allowedPrefixes: "P1P2/P/<last digit of the ip>/T/8/"
          skipUnknown: true
